openapi: "3.0.2"
info:
  title: Reservations Api
  version: "0.0.1"
servers:
  - url: http://localhost:7353
tags:
  - name: Server
    description: Server information
  - name: Person
    description: Person manipulation endpoints
  - name: Service
    description: Service manipulation endpoints
  - name: Role
    description: Role manipulation endpoints
  - name: Place Type
    description: Place type manipulation endpoints
  - name: Equipment Type
    description: Equipment type manipulation endpoints
  - name: Requeriments Types
    description: Objects that can be used as requeriment types
paths:
  /status:
    get:
      tags:
        - Server
      summary: Get server status
      responses:
        "200":
          description: Status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /persons:
    get:
      tags:
        - Person
      summary: Get person list
      responses:
        "200":
          description: Get the person data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/person"
    post:
      tags:
        - Person
      summary: Creates new person data
      requestBody:
        $ref: "#/components/requestBodies/newPerson"
      responses:
        "201":
          $ref: "#/components/responses/person"
  /persons/{id}:
    get:
      tags:
        - Person
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get person data
      responses:
        "200":
          $ref: "#/components/responses/person"
    patch:
      tags:
        - Person
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates person data
      requestBody:
        $ref: "#/components/requestBodies/person"
      responses:
        "200":
          $ref: "#/components/responses/person"
    delete:
      tags:
        - Person
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete person data
      responses:
        "204":
          description: Person data has been deleted
  /persons/{personId}/roles:
    get:
      tags:
        - Person
        - Role
      summary: Get person role list
      parameters:
        - $ref: "#/components/parameters/personId"
      responses:
        "200":
          description: Get the person roles list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/role"
    post:
      tags:
        - Person
        - Role
      summary: Attach roles to a person
      parameters:
        - $ref: "#/components/parameters/personId"
      requestBody:
        $ref: "#/components/requestBodies/personRoleList"
      responses:
        "201":
          $ref: "#/components/responses/personRoleList"
  /persons/{personId}/roles/{id}:
    get:
      tags:
        - Person
        - Role
      parameters:
        - $ref: "#/components/parameters/personId"
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get role data
      responses:
        "200":
          $ref: "#/components/responses/role"
    delete:
      tags:
        - Person
        - Role
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Detach a role
      responses:
        "204":
          description: Role has been detached
  /services:
    get:
      tags:
        - Service
      summary: Get service list
      responses:
        "200":
          description: Get the service data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/service"
    post:
      tags:
        - Service
      summary: Creates new service data
      requestBody:
        $ref: "#/components/requestBodies/newService"
      responses:
        "201":
          $ref: "#/components/responses/service"
  /services/{id}:
    get:
      tags:
        - Service
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get service data
      responses:
        "200":
          $ref: "#/components/responses/service"
    patch:
      tags:
        - Service
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates service data
      requestBody:
        $ref: "#/components/requestBodies/service"
      responses:
        "200":
          $ref: "#/components/responses/service"
    delete:
      tags:
        - Service
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete service data
      responses:
        "204":
          description: Service data has been deleted
  /roles:
    get:
      tags:
        - Role
        - Requeriments Types
      summary: Get role list
      responses:
        "200":
          description: Get the role data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/role"
    post:
      tags:
        - Role
        - Requeriments Types
      summary: Creates new role data
      requestBody:
        $ref: "#/components/requestBodies/newRole"
      responses:
        "201":
          $ref: "#/components/responses/role"
  /roles/{id}:
    get:
      tags:
        - Role
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get role data
      responses:
        "200":
          $ref: "#/components/responses/role"
    patch:
      tags:
        - Role
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates role data
      requestBody:
        $ref: "#/components/requestBodies/role"
      responses:
        "200":
          $ref: "#/components/responses/role"
    delete:
      tags:
        - Role
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete role data
      responses:
        "204":
          description: Role data has been deleted
  /place_types:
    get:
      tags:
        - Place Type
        - Requeriments Types
      summary: Get place type list
      responses:
        "200":
          description: Get the place type data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/placeType"
    post:
      tags:
        - Place Type
        - Requeriments Types
      summary: Creates new place type data
      requestBody:
        $ref: "#/components/requestBodies/newPlaceType"
      responses:
        "201":
          $ref: "#/components/responses/placeType"
  /place_types/{id}:
    get:
      tags:
        - Place Type
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get place type data
      responses:
        "200":
          $ref: "#/components/responses/placeType"
    patch:
      tags:
        - Place Type
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates place type data
      requestBody:
        $ref: "#/components/requestBodies/placeType"
      responses:
        "200":
          $ref: "#/components/responses/placeType"
    delete:
      tags:
        - Place Type
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete place type data
      responses:
        "204":
          description: Place Type data has been deleted
  /equipment_types:
    get:
      tags:
        - Equipment Type
        - Requeriments Types
      summary: Get equipment type list
      responses:
        "200":
          description: Get the equipment type data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/equipmentType"
    post:
      tags:
        - Equipment Type
        - Requeriments Types
      summary: Creates new equipment type data
      requestBody:
        $ref: "#/components/requestBodies/newEquipmentType"
      responses:
        "201":
          $ref: "#/components/responses/equipmentType"
  /equipment_types/{id}:
    get:
      tags:
        - Equipment Type
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get equipment type data
      responses:
        "200":
          $ref: "#/components/responses/equipmentType"
    patch:
      tags:
        - Equipment Type
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates equipment type data
      requestBody:
        $ref: "#/components/requestBodies/equipmentType"
      responses:
        "200":
          $ref: "#/components/responses/equipmentType"
    delete:
      tags:
        - Equipment Type
        - Requeriments Types
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete equipment type data
      responses:
        "204":
          description: Equipment Type data has been deleted
components:
  parameters:
    genericRequiredId:
      in: path
      name: id
      schema:
        type: integer
      required: true
    personId:
      in: path
      name: personId
      schema:
        type: integer
      required: true
  schemas:
    genericId:
      title: Id
      type: object
      properties:
        id:
          type: integer
    newPerson:
      title: New Person
      type: object
      properties:
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
    person:
      title: Person
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newPerson"
    roleIdList:
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            title: Role id
          example:
            - 1
            - 2
            - 3
    roleList:
      type: array
      items:
        $ref: "#/components/schemas/role"
    newService:
      title: New Service
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    service:
      title: Service
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newService"
    newRole:
      title: New Role
      type: object
      properties:
        name:
          type: string
    role:
      title: Role
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newRole"
    newPlaceType:
      title: New Place Type
      type: object
      properties:
        name:
          type: string
    placeType:
      title: Place Type
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newPlaceType"
    newEquipmentType:
      title: New Equipment Type
      type: object
      properties:
        name:
          type: string
    equipmentType:
      title: Equipment Type
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newEquipmentType"
  requestBodies:
    newPerson:
      description: Request that contains the person data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newPerson"
    person:
      description: Request that contains the person data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/person"
    personRoleList:
      description: A list of roles
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/roleIdList"
    newService:
      description: Request that contains the service data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newService"
    service:
      description: Request that contains the service data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/service"
    newRole:
      description: Request that contains the role data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newRole"
    role:
      description: Request that contains the role data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/role"
    newPlaceType:
      description: Request that contains the place data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newPlaceType"
    placeType:
      description: Request that contains the place type data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/placeType"
    newEquipmentType:
      description: Request that contains the equipment data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newEquipmentType"
    equipmentType:
      description: Request that contains the equipment type data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/equipmentType"
  responses:
    person:
      description: Response that contains the person data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/person"
    personRoleList:
      description: A list of roles
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/roleList"
    service:
      description: Response that contains the service data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/service"
    role:
      description: Response that contains the role data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/role"
    placeType:
      description: Response that contains the place type data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/placeType"
    equipmentType:
      description: Response that contains the equipment type data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/equipmentType"
