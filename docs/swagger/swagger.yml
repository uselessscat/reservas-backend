openapi: "3.0.2"
info:
  title: Reservations Api
  version: "0.0.1"
servers:
  - url: http://localhost:7353
tags:
  - name: Server
    description: Server information
  - name: Person
    description: Person manipulation endpoints
  - name: Service
    description: Service manipulation endpoints
  - name: Role
    description: Role manipulation endpoints
paths:
  /status:
    get:
      tags:
        - Server
      summary: Get server status
      responses:
        "200":
          description: Status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /persons:
    get:
      tags:
        - Person
      summary: Get person list
      responses:
        "200":
          description: Get the person data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/person"
    post:
      tags:
        - Person
      summary: Creates new person data
      requestBody:
        $ref: "#/components/requestBodies/newPerson"
      responses:
        "201":
          $ref: "#/components/responses/person"
  /persons/{id}:
    get:
      tags:
        - Person
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get person data
      responses:
        "200":
          $ref: "#/components/responses/person"
    patch:
      tags:
        - Person
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates person data
      requestBody:
        $ref: "#/components/requestBodies/person"
      responses:
        "200":
          $ref: "#/components/responses/person"
    delete:
      tags:
        - Person
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete person data
      responses:
        "204":
          description: Person data has been deleted
  /services:
    get:
      tags:
        - Service
      summary: Get service list
      responses:
        "200":
          description: Get the service data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/service"
    post:
      tags:
        - Service
      summary: Creates new service data
      requestBody:
        $ref: "#/components/requestBodies/newService"
      responses:
        "201":
          $ref: "#/components/responses/service"
  /services/{id}:
    get:
      tags:
        - Service
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get service data
      responses:
        "200":
          $ref: "#/components/responses/service"
    patch:
      tags:
        - Service
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates service data
      requestBody:
        $ref: "#/components/requestBodies/service"
      responses:
        "200":
          $ref: "#/components/responses/service"
    delete:
      tags:
        - Service
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete service data
      responses:
        "204":
          description: Service data has been deleted
  /roles:
    get:
      tags:
        - Role
      summary: Get role list
      responses:
        "200":
          description: Get the role data list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/role"
    post:
      tags:
        - Role
      summary: Creates new role data
      requestBody:
        $ref: "#/components/requestBodies/newRole"
      responses:
        "201":
          $ref: "#/components/responses/role"
  /roles/{id}:
    get:
      tags:
        - Role
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Get role data
      responses:
        "200":
          $ref: "#/components/responses/role"
    patch:
      tags:
        - Role
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Updates role data
      requestBody:
        $ref: "#/components/requestBodies/role"
      responses:
        "200":
          $ref: "#/components/responses/role"
    delete:
      tags:
        - Role
      parameters:
        - $ref: "#/components/parameters/genericRequiredId"
      summary: Delete role data
      responses:
        "204":
          description: Role data has been deleted
components:
  parameters:
    genericRequiredId:
      in: path
      name: id
      schema:
        type: integer
      required: true
  schemas:
    genericId:
      title: Id
      type: object
      properties:
        id:
          type: integer
    newPerson:
      title: New Person
      type: object
      properties:
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
    person:
      title: Person
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newPerson"
    newService:
      title: New Service
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    service:
      title: Service
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newService"
    newRole:
      title: New Role
      type: object
      properties:
        name:
          type: string
    role:
      title: Role
      allOf:
        - $ref: "#/components/schemas/genericId"
        - $ref: "#/components/schemas/newRole"
  requestBodies:
    newPerson:
      description: Request that contains the person data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newPerson"
    person:
      description: Request that contains the person data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/person"
    newService:
      description: Request that contains the service data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newService"
    service:
      description: Request that contains the service data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/service"
    newRole:
      description: Request that contains the role data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/newRole"
    role:
      description: Request that contains the role data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/role"
  responses:
    person:
      description: Response that contains the person data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/person"
    service:
      description: Response that contains the service data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/service"
    role:
      description: Response that contains the role data with id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/role"
